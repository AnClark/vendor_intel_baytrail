# FIXME surfaceflinger explodes if this is not "gmin"
TARGET_BOARD_PLATFORM := gmin

PRODUCT_COPY_FILES += \
    $(LOCAL_PATH)/init.rc:root/init.minnow_max.rc \
    $(LOCAL_PATH)/init.recovery.rc:root/init.recovery.minnow_max.rc \
    $(LOCAL_PATH)/ueventd.rc:root/ueventd.minnow_max.rc \
    $(LOCAL_PATH)/fstab:root/fstab

# These files are extremely board-specific and doesn't go in the mix-in
PRODUCT_COPY_FILES += \
    frameworks/av/media/libstagefright/data/media_codecs_google_audio.xml:system/etc/media_codecs_google_audio.xml \
    frameworks/av/media/libstagefright/data/media_codecs_google_video.xml:system/etc/media_codecs_google_video.xml \
    $(LOCAL_PATH)/../media_codecs.xml:system/etc/media_codecs.xml

#flatland
PRODUCT_PACKAGES += \
        flatland

PRODUCT_COPY_FILES += \
    $(LOCAL_PATH)/audio/audio_policy.conf:system/etc/audio_policy.conf

# ----------------- BEGIN MIX-IN DEFINITIONS -----------------
# Mix-In definitions are auto-generated by mixin-update
##############################################################
# Source: device/intel/mixins/groups/kernel/gmin64/product.mk.1
##############################################################
TARGET_KERNEL_ARCH := x86_64

##############################################################
# Source: device/intel/mixins/groups/kernel/gmin64/product.mk
##############################################################

LOCAL_KERNEL_MODULE_FILES :=
ifeq ($(TARGET_PREBUILT_KERNEL),)
  # use default kernel
  LOCAL_KERNEL_PATH := device/intel/gmin-kernel/$(TARGET_KERNEL_ARCH)
  LOCAL_KERNEL := $(LOCAL_KERNEL_PATH)/bzImage
  LOCAL_KERNEL_MODULE_FILES := $(wildcard $(LOCAL_KERNEL_PATH)/modules/*)
  LOCAL_KERNEL_MODULE_TREE_PATH := $(LOCAL_KERNEL_PATH)/lib/modules
else
  # use custom kernel
  LOCAL_KERNEL := $(TARGET_PREBUILT_KERNEL)
  ifneq ($(TARGET_PREBUILT_KERNEL_MODULE_PATH),)
    LOCAL_KERNEL_MODULE_FILES := $(wildcard $(TARGET_PREBUILT_KERNEL_MODULE_PATH)/*)
  endif
  ifneq ($(TARGET_PREBUILT_KERNEL_MODULE_TREE_PATH),)
    LOCAL_KERNEL_MODULE_TREE_PATH := $(TARGET_PREBUILT_KERNEL_MODULE_TREE_PATH)
  endif
endif

ifneq ($(LOCAL_KERNEL_MODULE_TREE_PATH),)
  LOCAL_KERNEL_VERSION := $(shell strings $(LOCAL_KERNEL_PATH)/vmlinux | grep -m 1 'Linux version' | awk '{print $$3}')

  ifeq ($(LOCAL_KERNEL_VERSION),)
    $(error Cannot get version for kernel '$(LOCAL_KERNEL)')
  endif

  FULL_TREE_PATH := $(LOCAL_KERNEL_MODULE_TREE_PATH)/$(LOCAL_KERNEL_VERSION)
  # Verify FULL_TREE_PATH is an existing folder
  ifneq ($(shell test -d $(FULL_TREE_PATH) && echo 1), 1)
    $(error '$(FULL_TREE_PATH)' does not exist or is not a directory)
  endif

  LOCAL_KERNEL_MODULE_TREE_FILES := $(shell cd $(LOCAL_KERNEL_MODULE_TREE_PATH) && \
                                            find $(LOCAL_KERNEL_VERSION) -type f)
endif

# Copy kernel into place
PRODUCT_COPY_FILES += \
	$(LOCAL_KERNEL):kernel \
	$(foreach f, $(LOCAL_KERNEL_MODULE_FILES), $(f):system/lib/modules/$(notdir $(f))) \
  $(foreach f, $(LOCAL_KERNEL_MODULE_TREE_FILES), $(LOCAL_KERNEL_PATH)/lib/modules/$(f):system/lib/modules/$(f))
##############################################################
# Source: device/intel/mixins/groups/boot-arch/minnow_max_mmc/product.mk
##############################################################
TARGET_UEFI_ARCH := x86_64
ifeq ($(TARGET_BUILD_VARIANT),user)
    BIOS_VARIANT := release
else
    BIOS_VARIANT := debug
endif

$(call inherit-product,build/target/product/verity.mk)

PRODUCT_SYSTEM_VERITY_PARTITION := /dev/block/by-name/android_system

PRODUCT_PACKAGES += \
	pstore-clean

PRODUCT_COPY_FILES += \
	frameworks/native/data/etc/android.software.verified_boot.xml:system/etc/permissions/android.software.verified_boot.xml

BOARD_SFU_UPDATE := hardware/intel/efi_capsules/$(BIOS_VARIANT)/$(TARGET_PRODUCT).fv
EFI_IFWI_BIN := hardware/intel/efi_capsules/$(BIOS_VARIANT)/$(TARGET_PRODUCT)_ifwi.bin
EFI_EMMC_BIN := hardware/intel/efi_capsules/$(BIOS_VARIANT)/$(TARGET_PRODUCT)_emmc.bin

ifneq ($(CALLED_FROM_SETUP),true)
ifeq ($(wildcard $(BOARD_SFU_UPDATE)),)
$(warning $(BOARD_SFU_UPDATE) not found, OTA updates will not provide a firmware capsule)
BOARD_SFU_UPDATE :=
endif
ifeq ($(wildcard $(EFI_EMMC_BIN)),)
$(warning $(EFI_EMMC_BIN) not found, flashfiles will not include 2nd stage EMMC firmware)
EFI_EMMC_BIN :=
endif
ifeq ($(wildcard $(EFI_IFWI_BIN)),)
$(warning $(EFI_IFWI_BIN) not found, IFWI binary will not be provided in out/dist/)
EFI_IFWI_BIN :=
endif
endif

##############################################################
# Source: device/intel/mixins/groups/dalvik-heap/tablet-7in-hdpi-1024/product.mk
##############################################################
#include frameworks/native/build/tablet-7in-hdpi-1024-dalvik-heap.mk
PRODUCT_PROPERTY_OVERRIDES += \
    dalvik.vm.heapstartsize=8m \
    dalvik.vm.heapgrowthlimit=100m \
    dalvik.vm.heapsize=174m \
    dalvik.vm.heaptargetutilization=0.75 \
    dalvik.vm.heapminfree=512k \
    dalvik.vm.heapmaxfree=8m
##############################################################
# Source: device/intel/mixins/groups/houdini/true/product.mk
##############################################################
$(call inherit-product-if-exists, vendor/intel/houdini/houdini.mk)

##############################################################
# Source: device/intel/mixins/groups/graphics/ufo_gen7/product.mk
##############################################################
#
# Hardware Accelerated Graphics
#
PRODUCT_PACKAGES += \
    libdrm \
    libdrm_intel \
    ufo.prop

#
# Color conversion library
#
PRODUCT_PACKAGES += \
    libI420colorconvert

ifneq ($(BOARD_HAVE_GEN_GFX_SRC),true)
    # UFO prebuilts
    PRODUCT_PACKAGES += ufo_prebuilts
    ifneq ($(TARGET_2ND_ARCH),)
        PRODUCT_PACKAGES += ufo_prebuilts_32
    endif

else # ufo packages when building from source
    PRODUCT_PACKAGES += ufo
    PRODUCT_PACKAGES += ufo_test
endif

PRODUCT_PROPERTY_OVERRIDES += ro.opengles.version = 196609
PRODUCT_COPY_FILES += \
    device/intel/common/ufo/init.ufo.sh:system/etc/init.ufo.sh

##############################################################
# Source: device/intel/mixins/groups/ethernet/dhcp/product.mk
##############################################################
PRODUCT_COPY_FILES += \
        frameworks/native/data/etc/android.hardware.ethernet.xml:system/etc/permissions/android.hardware.ethernet.xml
##############################################################
# Source: device/intel/mixins/groups/audio/hdmi+usb/product.mk
##############################################################
# Tinyalsa
PRODUCT_PACKAGES_DEBUG += \
         tinymix \
         tinyplay \
         tinycap

# Extended Audio HALs
PRODUCT_PACKAGES += \
    audio.r_submix.default \
    audio.hdmi.$(TARGET_BOARD_PLATFORM) \
    audio.usb.default

##############################################################
# Source: device/intel/mixins/groups/media/ufo/product.mk
##############################################################
# libstagefrighthw
BUILD_WITH_FULL_STAGEFRIGHT := true
PRODUCT_PACKAGES += \
    libstagefrighthw

# Media SDK and OMX IL components
PRODUCT_PACKAGES += \
    libmfxhw32 \
    libmfxsw32 \
    libmfx_omx_core \
    libmfx_omx_components_hw \
    libmfx_omx_components_sw \
    libgabi++-mfx \
    libstlport-mfx

# Build OMX wrapper codecs
PRODUCT_PACKAGES += \
    libmdp_omx_core \
    libstagefright_soft_mp3dec_mdp \
    libstagefright_soft_aacdec_mdp \
    libstagefright_soft_aacenc_mdp \
    libstagefright_soft_vorbisdec_mdp \
    libstagefright_soft_amrenc_mdp \
    libstagefright_soft_amrdec_mdp

##############################################################
# Source: device/intel/mixins/groups/usb/host+acc/product.mk
##############################################################
PRODUCT_COPY_FILES += \
    frameworks/native/data/etc/android.hardware.usb.accessory.xml:system/etc/permissions/android.hardware.usb.accessory.xml \
    frameworks/native/data/etc/android.hardware.usb.host.xml:system/etc/permissions/android.hardware.usb.host.xml

# usb accessory
PRODUCT_PACKAGES += \
    com.android.future.usb.accessory

##############################################################
# Source: device/intel/mixins/groups/touch/ft5x0x/product.mk
##############################################################
PRODUCT_COPY_FILES += \
        device/intel/common/touch/ft5x0x.idc:system/usr/idc/ft5x0x.idc \
        frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml
##############################################################
# Source: device/intel/mixins/groups/device-type/tablet/product.mk
##############################################################
PRODUCT_CHARACTERISTICS := tablet

PRODUCT_COPY_FILES += \
        frameworks/native/data/etc/tablet_core_hardware.xml:system/etc/permissions/tablet_core_hardware.xml

##############################################################
# Source: device/intel/mixins/groups/gms/true/product.mk
##############################################################
FLAG_GMS_AVAILABLE := yes
$(call inherit-product-if-exists, vendor/google/gms/products/intel_gms.mk)
##############################################################
# Source: device/intel/mixins/groups/debug-tools/true/product.mk
##############################################################
# If this a debugging build include the public debug modules
ifneq ($(filter eng userdebug,$(TARGET_BUILD_VARIANT)),)

PRODUCT_PACKAGES += AndroidTerm libjackpal-androidterm4

endif
##############################################################
# Source: device/intel/mixins/groups/charger/true/product.mk
##############################################################
PRODUCT_PACKAGES += charger charger_res_images

##############################################################
# Source: device/intel/mixins/groups/hdcpd/true/product.mk
##############################################################
# Enable media content protection services

# HDCP Daemon
PRODUCT_PACKAGES += hdcpd
##############################################################
# Source: device/intel/mixins/groups/widevine/true/product.mk
##############################################################
ifneq ($(BOARD_USE_64BIT_USERSPACE),true)
#enable Widevine drm
PRODUCT_PROPERTY_OVERRIDES += drm.service.enabled=true

PRODUCT_COPY_FILES += device/intel/common/media/mfx_omxil_core_widevine.conf:system/etc/mfx_omxil_core.conf

# There is an additional dependency on hdcpd that should be controlled
# through the content-protection mixin

PRODUCT_PACKAGES += com.google.widevine.software.drm.xml \
    com.google.widevine.software.drm \
    libdrmwvmplugin \
    libwvm \
    libdrmdecrypt \
    libWVStreamControlAPI_L1 \
    libwvdrm_L1

PRODUCT_PACKAGES_ENG += WidevineSamplePlayer

# WV Modular
PRODUCT_PACKAGES += libwvdrmengine

PRODUCT_PACKAGES_ENG += ExoPlayerDemo

PRODUCT_PACKAGES += liboemcrypto

PRODUCT_PACKAGES += libmeimm libsecmem

BOARD_WIDEVINE_OEMCRYPTO_LEVEL := 1
else
$(warning "We don't have widevine support on 64bit userspace currently!")
# Make generic definition of media components.
PRODUCT_COPY_FILES += device/intel/common/media/mfx_omxil_core.conf:system/etc/mfx_omxil_core.conf
endif # no 64bit support for widevine
##############################################################
# Source: device/intel/mixins/groups/power/true/product.mk
##############################################################
# Power HAL
PRODUCT_PACKAGES += power.$(TARGET_BOARD_PLATFORM) \
                    power_hal_helper

##############################################################
# Source: device/intel/mixins/groups/lights/true/product.mk
##############################################################
# Lights HAL
PRODUCT_PACKAGES += lights.$(TARGET_BOARD_PLATFORM)

##############################################################
# Source: device/intel/mixins/groups/memtrack/true/product.mk
##############################################################
# memtrack HAL
PRODUCT_PACKAGES += \
        memtrack.$(TARGET_BOARD_PLATFORM)
##############################################################
# Source: device/intel/mixins/groups/bluetooth/btusb/product.mk
##############################################################
PRODUCT_PACKAGES += \
    audio.a2dp.default \
		ath3k-1.fw \

PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.bluetooth.xml:system/etc/permissions/android.hardware.bluetooth.xml \
		frameworks/native/data/etc/android.hardware.bluetooth_le.xml:system/etc/permissions/android.hardware.bluetooth_le.xml

ADDITIONAL_BUILD_PROPERTIES += bluetooth.hwcfg=stop \
                bluetooth.rfkill=1
##############################################################
# Source: device/intel/mixins/groups/adb_net/true/product.mk
##############################################################
# Enable Secure Debugging
ifneq ($(TARGET_BUILD_VARIANT),eng)
PRODUCT_DEFAULT_PROPERTY_OVERRIDES += ro.adb.secure=1
endif
##############################################################
# Source: device/intel/mixins/groups/art-config/default/product.mk
##############################################################
# This is needed to enable silver art optimizer.
# This will build the plugins/libart-extension.so library,  which is dynamically loaded by
# AOSP and contains Intel optimizations to the compiler.
PRODUCT_PACKAGES += libart-extension
# ------------------ END MIX-IN DEFINITIONS ------------------
